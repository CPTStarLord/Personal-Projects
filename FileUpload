//Learning React Code
//This code defines a React component named FileUpload that allows users to upload a file. 
//It uses React's useState hook to manage the file and upload status. 
//The component includes an input for selecting a file and a button to trigger the upload. 
//When the button is clicked, it sends the selected file to a specified URL using a POST request. 
//The status of the upload (success or failure) is displayed using an alert component.

import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Upload } from 'lucide-react';

const FileUpload = () => {
  const [file, setFile] = useState(null);
  const [status, setStatus] = useState('');

  const handleFileChange = (event) => {
    setFile(event.target.files[0]);
  };

  const handleUpload = async () => {
    if (!file) {
      setStatus('Please select a file first');
      return;
    }

*// Create a FormData object to send the file*

const formData = new FormData();
    formData.append('file', file);

    try {

*// In a real application, replace this URL with your actual API endpoint*

const response = await fetch('https://example.com/upload', {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        setStatus('File uploaded successfully!');
      } else {
        setStatus('Failed to upload file. Please try again.');
      }
    } catch (error) {
      setStatus('An error occurred. Please try again.');
      console.error('Error:', error);
    }
  };

  return (
    <div className="max-w-md mx-auto mt-10 p-6 bg-white rounded-lg shadow-md">
      <h1 className="text-2xl font-bold mb-4">File Upload</h1>
      <div className="mb-4">
        <Input type="file" onChange={handleFileChange} className="mb-2" />
        <Button onClick={handleUpload} className="w-full">
          <Upload className="mr-2 h-4 w-4" /> Upload File
        </Button>
      </div>
      {status && (
        <Alert variant={status.includes('successfully') ? 'default' : 'destructive'}>
          <AlertDescription>{status}</AlertDescription>
        </Alert>
      )}
    </div>
  );
};
